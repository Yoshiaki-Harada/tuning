name: tuning-e2e-pipeline
on: [push]
jobs:
  deploy-to-dev-for-e2e:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: npm install -g firebase-tools
      - name: Build and Deploy to tuning-dev
        run: ./build_and_deploy.sh dev
        shell: bash
        working-directory: ./enviroments/firesbase
        env:
          FIREBASE_TOKEN: ${{ secrets.SERVICE_ACCOUNT }}

  execute-e2e:
    runs-on: ubuntu-20.04
    needs: deploy-for-e2e
    steps:
      - uses: actions/checkout@master
      - name: Decrypt secret
        run: ./decrypt_secret.sh
        working-directory: ./.github/scripts
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: Move secret
        run: mv $HOME/secrets/serviceAccount.json ./e2e
      - name: Cypress Run
        uses: cypress-io/github-action@v2
        with:
          working-directory: e2e
          start: npm run cypress:run
          wait-on: https://tuning-dev.web.app/
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # UID of User to login as during tests
          CYPRESS_TEST_UID: ${{ secrets.TEST_UID }}
          # Service Account (used for creating custom auth tokens)
          # SERVICE_ACCOUNT: /github/workspace/secrets/serviceAccount.json
          FIREBASE_TOKEN: ${{ secrets.SERVICE_ACCOUNT }}
          GCLOUD_PROJECT: tuning-dev
          # Branch settings
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REF: ${{ github.ref }}
      - name: test
        run: exit 1
  deploy-to-staging:
    runs-on: ubuntu-20.04
    needs: execute-e2e
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: npm install -g firebase-tools
      - name: Build and Deploy to staging
        run: ./build_and_deploy.sh staging
        shell: bash
        working-directory: ./enviroments/firesbase
        env:
          FIREBASE_TOKEN: ${{ secrets.SERVICE_ACCOUNT }}